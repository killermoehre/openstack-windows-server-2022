---
name: CI

'on':
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
  push:

defaults:
  run:
    shell: pwsh

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install the Microsoft Deployment Toolkit (MDT)
        run: Install-ChocoPackage MDT
      - name: Install Qemu for not depending on Hyper-V
        run: Install-ChocoPackage qemu-img
      - name: Cache Windows Image
        id: cache-windows-image
        uses: actions/cache@v3
        with:
          path: C:\SERVER_EVAL_x64FRE_en-us.iso
          key: SERVER_EVAL_x64FRE_en-us.iso
      - name: Download Windows Image
        if: steps.cache-windows-image.outputs.cache-hit != 'true'
        run: Start-BitsTransfer -Source https://software-static.download.prss.microsoft.com/sg/download/888969d5-f34g-4e03-ac9d-1f9786c66749/SERVER_EVAL_x64FRE_en-us.iso -Destination C:\SERVER_EVAL_x64FRE_en-us.iso
      - name: Mount Windows Image
        run: |2
          $diskImage = Mount-DiskImage -ImagePath C:\SERVER_EVAL_x64FRE_en-us.iso -PassThru
          "SourceImageDrive=$(($diskImage | Get-Volume).DriveLetter):" | Out-File -FilePath $env:GITHUB_ENV -Append
      - name: Cache VirtIO Driver Image
        id: cache-virtio-driver-image
        uses: actions/cache@v3
        with:
          path: C:\virtio-win-0.1.240.iso
          key: virtio-win-0.1.240.iso
      - name: Download Virtio Driver Image
        if: steps.cache-virtio-driver-image.outputs.cache-hot != 'true'
        run: Start-BitsTransfer -Source https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/virtio-win-0.1.240-1/virtio-win-0.1.240.iso -Destination C:\virtio-win-0.1.240.iso
      - name: Mount Virtio Driver Image
        run: |2
          $diskImage = Mount-DiskImage -ImagePath C:\virtio-win-0.1.240.iso -PassThru
          "VirtioImageDrive=$(($diskImage | Get-Volume).DriveLetter):" | Out-File -FilePath $env:GITHUB_ENV -Append
      - name: Patch Windows Image
        run: |2
          .\put-driver-in-the-image.ps1 -SourceImageDrive "$env:SourceImageDrive" -VirtioImageDrive "$env:VirtioImageDrive"
      - uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: ${{ env.LogDir }}/*
        if: ${{ always() }}